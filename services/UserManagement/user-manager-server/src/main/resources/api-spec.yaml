swagger: "2.0"
info:
  description: "This is the user manager API for AMT Project Two"
  version: "1.0.0"
  title: "Users"

host: localhost:8080
basePath: /api
tags:
  - name: "users"
    description: "Everything about your users"
schemes:
  - "http"
paths:
  /users:
    post:
      tags:
        - "users"
      summary: "Create a new user"
      description: ""
      operationId: createUser
      consumes:
        - application/json
      parameters:
        - name: user
          in: body
          required: true
          schema:
            $ref: '#/definitions/UserInput'
      responses:
        201:
          description: created
          schema:
            type: object
        403:
          description: blocked
          schema:
            type: object
        400:
          description: wrong format
          schema:
            type: object
        409:
          description: duplicate ressource
          schema:
            type: object
    get:
      tags:
        - "users"
      summary: "Get the list of all users"
      description: ""
      operationId: "getUsers"
      produces:
        - "application/json"
      responses:
        200:
          description: "successful operation"
          schema:
            type: array
            items:
              $ref: "#/definitions/UserOutput"
        400:
          description: wrong format
          schema:
            type: object
        403:
          description: blocked
          schema:
            type: object
        404:
          description: ressource not found
          schema:
            type: object
    put:
      tags:
        - "users"
      summary: "Updates the ressource"
      operationId: "updateUser"
      parameters:
        - name: email
          in: body
          required: false
          schema:
            $ref: '#/definitions/UserInput'
      responses:
        '201':
          description: updated
          schema:
            type: object
        400:
          description: wrong format
          schema:
            type: object
        403:
          description: blocked
          schema:
            type: object
        404:
          description: ressource not found
          schema:
            type: object
    delete:
      tags:
        - "users"
      summary: "Deletes a given ressource"
      operationId: "deleteUser"
      parameters:
        - name: user
          in: body
          required: true
          schema:
            type: object
      responses:
        201:
          description: deleted
          schema:
            type: object
        400:
          description: wrong format
          schema:
            type: object
        403:
          description: blocked
          schema:
            type: object
        404:
          description: ressource not found
          schema:
            type: object
  /users/{email}:
    get:
      tags:
        - "users"
      summary: "Get a user"
      description: ""
      operationId: "getUserById"
      produces:
        - "application/json"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: '#/definitions/UserOutput'
        400:
          description: wrong format
          schema:
            type: object
        403:
          description: blocked
          schema:
            type: object
        404:
          description: ressource not found
          schema:
            type: object
definitions:
  User:
    type: "object"
    properties:
      email:
        type: "string"
      firstName:
        type: "string"
      lastName:
        type: "string"
      isAdmin:
        type: "boolean"
      isBlocked:
        type: "boolean"
  UserOutput:
    allOf:
      - type: "object"
      - $ref: "#/definitions/User"
  UserInput:
    allOf:
      - $ref: "#/definitions/User"
      - type: "object"
      - properties:
          password:
            type: "string"
          salt:
            type: "string"
#  Error:
#    type: object
#  Pagination:
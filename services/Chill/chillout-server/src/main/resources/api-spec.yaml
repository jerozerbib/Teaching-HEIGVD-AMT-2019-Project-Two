swagger: '2.0'
info:
  version: 1.0.0
  title: Chillout API
  description: An API to manage the entities in the chillout
basePath: /api
schemes:
  - http
paths:
  /clients:
    post:
      description: create a client
      operationId: createClient
      consumes:
        - application/json
      parameters:
        - name: user
          in: body
          required: true
          schema:
            $ref: '#/definitions/ClientInput'
      responses:
        '201':
          description: created
          schema:
            type: object
    get:
      description: get the list of all clients
      operationId: getClients
      produces:
        - application/json
      responses:
        '200':
          description: success
          schema:
            type: array
            items:
              $ref: '#/definitions/ClientOutput'
  /products:
    post:
      description: create a product
      operationId: createProduct
      consumes:
        - application/json
      parameters:
        - name: product
          in: body
          required: true
          schema:
            $ref: '#/definitions/ProductInput'
      responses:
        '201':
          description: created
          schema:
            type: object
    get:
      description: get the list of all products
      operationId: getProducts
      produces:
        - application/json
      responses:
        '200':
          description: success
          schema:
            type: array
            items:
              $ref: '#/definitions/ProductOutput'
  /orders:
    get:
      description: get the list of all orders
      operationId: getOrders
      produces:
        - application/json
      responses:
        '200':
          description: success
          schema:
            type: array
            items:
              $ref: '#/definitions/Order'
definitions:
  Client:
    type: object
    properties:
      name:
        type: string
      username:
        type: string
  ClientInput:
    allOf:
      - $ref: '#/definitions/Client'
      - type: object
      - properties:
          password:
            type: string
          salt:
            type: string
          isAdmin:
            type: boolean
  ClientOutput:
    allOf:
      - $ref: '#/definitions/Client'
      - type: object
      - properties:
          id:
            type: integer
            format: int64
  Product:
    type: object
    properties:
      name:
        type: string
      unitPrice:
        type: number
      description:
        type: string
  ProductInput:
    allOf:
      - $ref: '#/definitions/Product'
      - type: object
  ProductOutput:
    allOf:
      - $ref: '#/definitions/Product'
      - type: object
      - properties:
          id:
            type: integer
            format: int64
  OrderItem:
    type: object
    properties:
      id:
        type: integer
        format: int64
      product:
        $ref: '#/definitions/Product'
      quantity:
        type: integer
  Order:
    type: object
    properties:
      id:
        type: integer
        format: int64
      client:
        $ref: '#/definitions/ClientOutput'
      orderItems:
        type: array
        items:
          $ref: '#/definitions/OrderItem'